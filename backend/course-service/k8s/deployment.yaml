apiVersion: apps/v1
kind: Deployment
metadata:
  name: course-service
  labels:
    app: course-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: course-service
  template:
    metadata:
      labels:
        app: course-service
    spec:
      containers:
      - name: course-service
        image: adhamafis/course-service:v1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: course-service-config
              key: DATABASE_URL
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: course-service-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: course-service-config
              key: REDIS_PORT
        - name: CACHE_TTL
          valueFrom:
            configMapKeyRef:
              name: course-service-config
              key: CACHE_TTL
        - name: CACHE_ENABLED
          valueFrom:
            configMapKeyRef:
              name: course-service-config
              key: CACHE_ENABLED
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 12  # Allow 1 minute (12 * 5s) for startup 