name: Docker Build and Push

on:
  push:
    branches: 
      - 'team3'
    paths:
      - 'grade-simulator-service/**'
      - 'chat-service/**'
      - 'notification-service/**'

jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ['grade-simulator', 'chat', 'notification']
        include:
          - service: 'grade-simulator'
            context: './grade-simulator-service/Backend'
            dockerfile: './grade-simulator-service/Backend/Dockerfile'
          - service: 'chat'
            context: './chat-service'
            dockerfile: './chat-service/Dockerfile'
          - service: 'notification'
            context: './notification-service'
            dockerfile: './notification-service/Dockerfile'
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check if service directory exists
      id: check_dir
      run: |
        if [ -d "${{ matrix.context }}" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
      
    - name: Set up Docker Buildx
      if: steps.check_dir.outputs.exists == 'true'
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      if: steps.check_dir.outputs.exists == 'true'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Extract branch name
      if: steps.check_dir.outputs.exists == 'true'
      shell: bash
      run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      
    - name: Build and push
      if: steps.check_dir.outputs.exists == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/${{ matrix.service }}:${{ env.BRANCH_NAME }}
          ghcr.io/${{ github.repository }}/${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max 