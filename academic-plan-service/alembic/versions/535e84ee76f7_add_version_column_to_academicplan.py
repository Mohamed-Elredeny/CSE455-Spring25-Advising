"""Add version column to AcademicPlan

Revision ID: 535e84ee76f7
Revises: 
Create Date: 2025-04-18 00:08:59.067998

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '535e84ee76f7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_academic_plan_id', table_name='academic_plan')
    op.drop_table('academic_plan')
    op.drop_index('ix_course_id', table_name='course')
    op.drop_table('course')
    op.drop_index('ix_requirement_id', table_name='requirement')
    op.drop_table('requirement')
    op.drop_index('ix_semester_id', table_name='semester')
    op.drop_table('semester')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('semester',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('semester_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('academic_plan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['academic_plan_id'], ['academic_plan.id'], name='semester_academic_plan_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='semester_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_semester_id', 'semester', ['id'], unique=False)
    op.create_table('requirement',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('program', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('course_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name='fk_requirement_course', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='requirement_pkey')
    )
    op.create_index('ix_requirement_id', 'requirement', ['id'], unique=False)
    op.create_table('course',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('credits', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('prerequisites', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.Column('semester_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], name='course_semester_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='course_pkey')
    )
    op.create_index('ix_course_id', 'course', ['id'], unique=False)
    op.create_table('academic_plan',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('program', sa.VARCHAR(), server_default=sa.text("'Unknown'::character varying"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='academic_plan_pkey')
    )
    op.create_index('ix_academic_plan_id', 'academic_plan', ['id'], unique=False)
    # ### end Alembic commands ###
